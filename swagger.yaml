swagger: "2.0"
info:
  description: "This is phonebook service"
  version: "1.0.0"
  title: "Swagger Phonebook"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "phonebook.swagger.io"
basePath: "/v2"
tags:
- name: "phonebook"
  description: "Everything about your phonebook"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /contact:
    post:
      tags:
      - "phonebook"
      summary: "Add a new contact"
      description: ""
      operationId: "addContact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Contact object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        405:
          description: "Invalid input"
      security:
      - phonebook_auth:
        - "write:contacts"
        - "read:contacts"
  /contact/findByName:
    get:
      tags:
      - "phonebook"
      summary: "Finds Contact by name"
      description: "find contact by name"
      operationId: "findContactsByName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Contact name that need to be considered for filter"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
        400:
          description: "Invalid status value"
      security:
      - phonebook_auth:
        - "write:contacts"
        - "read:contacts"
  /contact/findByEmail:
    get:
      tags:
      - "phonebook"
      summary: "Finds contact by email"
      description: "find contact by email address."
      operationId: "findContactsByEmail"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "query"
        description: "Email to filter by"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
        400:
          description: "Invalid tag value"
      security:
      - phonebook_auth:
        - "write:contacts"
        - "read:contacts"
  /contact/{contactId}:
    get:
      tags:
      - "phonebook"
      summary: "Find contact by ID"
      description: "Returns a single contact"
      operationId: "getContactById"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Contact"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
      security:
      - api_key: []
    put:
      tags:
      - "phonebook"
      summary: "Updates a contact in phonebook"
      description: ""
      operationId: "updateContactWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Contact object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        405:
          description: "Invalid input"
      security:
      - phonebook_auth:
        - "write:contacts"
        - "read:contacts"
    delete:
      tags:
      - "phonebook"
      summary: "Deletes a contact"
      description: ""
      operationId: "deleteContact"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "contactId"
        in: "path"
        description: "Contact id to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
      security:
      - phonebook_auth:
        - "write:contacts"
        - "read:contacts"
  
securityDefinitions:
  phonebook_auth:
    type: "oauth2"
    authorizationUrl: "http://phonebook.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:contacts: "modify contact in your account"
      read:contacts: "read your contact"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Contact:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"